version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-main
    environment:
      POSTGRES_DB: asignacion_espacios
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - red_compartida

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-main
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - red_compartida

  microservicio-usuarios:
    build: ./microservicio-usuarios
    container_name: ms-usuarios
    environment:
      - DATABASE_URL=postgresql://postgres:root@postgres:5432/asignacion_espacios
      - NOTIFICACIONES_SERVICE_URL=http://ms-notificaciones:8006
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - red_compartida

  microservicio-notificaciones:
    build: ./microservicio-notificaciones
    container_name: ms-notificaciones
    environment:
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672/
      - SMTP_USUARIO=${SMTP_USUARIO}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAIL_REMITENTE=${EMAIL_REMITENTE}
    ports:
      - "8006:8006"
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - red_compartida

  microservicio-programas:
    build: ./microservicio-programas
    container_name: ms-programas
    environment:
      - DATABASE_URL=postgresql://postgres:root@postgres:5432/asignacion_espacios
      - USUARIOS_SERVICE_URL=http://ms-usuarios:8000
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - red_compartida

  microservicio-cohortes:
    build: ./microservicio-cohortes
    container_name: ms-cohortes
    environment:
      - DATABASE_URL=postgresql://postgres:root@postgres:5432/asignacion_espacios
      - USUARIOS_SERVICE_URL=http://ms-usuarios:8000
    ports:
      - "8003:8003"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - red_compartida

  microservicio-asignaturas:
    build: ./microservicio-asignaturas
    container_name: ms-asignaturas
    environment:
      - DATABASE_URL=postgresql://postgres:root@postgres:5432/asignacion_espacios
      - USUARIOS_SERVICE_URL=http://ms-usuarios:8000
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - red_compartida

  microservicio-salones:
    build: ./microservicio-salones
    container_name: ms-salones
    environment:
      - DATABASE_URL=postgresql://postgres:root@postgres:5432/asignacion_espacios
      - USUARIOS_SERVICE_URL=http://ms-usuarios:8000
    ports:
      - "8004:8004"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - red_compartida

  microservicio-horarios:
    build: ./microservicio-horarios
    container_name: ms-horarios
    environment:
      - DATABASE_URL=postgresql://postgres:root@postgres:5432/asignacion_espacios
      - USUARIOS_SERVICE_URL=http://ms-usuarios:8000
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672/
    ports:
      - "8005:8005"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - red_compartida

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  red_compartida:
    driver: bridge